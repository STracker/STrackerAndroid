package src.stracker;

import java.util.ArrayList;

import com.loopj.android.http.AsyncHttpClient;
import com.loopj.android.http.BinaryHttpResponseHandler;

import android.app.Activity;
import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;
import roboguice.activity.RoboListActivity;
import roboguice.inject.ContentView;
import roboguice.inject.InjectView;
import src.stracker.model.Actor;

@ContentView(R.layout.activity_actors)
public class ActorsActivity extends RoboListActivity {
	
	@InjectView(R.id.actor_photo) ImageView _photo;
	@InjectView(R.id.actor_name)  TextView _actorName;
	@InjectView(R.id.char_name)   TextView _characterName;
	@InjectView(R.id.list_actors) ListView _listActors;
	
	private ArrayList<Actor> _actors;
	private ActorsAdapter _adapter;
	
	@Override 
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState); 
		_actors = getIntent().getParcelableArrayListExtra("list");
		_adapter = new ActorsAdapter(this);
		_listActors.setAdapter(_adapter);
	}
	
	private class ActorsAdapter extends BaseAdapter{

		private LayoutInflater _inflater;
		private Activity _activity;
		
		public ActorsAdapter(Activity activity){
			_activity = activity;
			_inflater = (LayoutInflater) _activity.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
		}
		
		@Override
		public int getCount() {
			return _actors.size();
		}

		@Override
		public Object getItem(int position) {
			return position;
		}

		@Override
		public long getItemId(int position) {
			return position;
		}

		@Override
		public View getView(int position, View convertView, ViewGroup parent) {
			View vi=convertView;
	        if(convertView==null)
	            vi = _inflater.inflate(R.layout.actor_row, null);
	 
	        // Setting all values in listview
	        _actorName.setText(_actors.get(position).getName());
	        _characterName.setText(_actors.get(position).getCharacterName());
	        showPhoto(_photo, _actors.get(position).getPhotoUrl());
	        return vi;
		}	
		
		private void showPhoto(final ImageView photo, String url){
			AsyncHttpClient client = new AsyncHttpClient();
			String[] allowedContentTypes = new String[] { "image/png", "image/jpeg" };
			client.get(url, new BinaryHttpResponseHandler(allowedContentTypes) {
			    @Override
			    public void onSuccess(byte[] fileData) {
			        Bitmap result = BitmapFactory.decodeByteArray(fileData,0,fileData.length);
			    	photo.setImageBitmap(Bitmap.createScaledBitmap(result, 168, 251, false));
			    }
			});
		}
	}
}
